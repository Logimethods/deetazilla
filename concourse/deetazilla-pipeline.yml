###### JOBS #######

## https://concourse.ci/configuring-groups.html
groups:
- name: deetazilla
  jobs:
  - build-docker-dz_templater
  - build-docker-dz_compose
  - build-docker-dz_cassandra
  - build-docker-dz_nats-client
  - build-docker-dz_nats-server
  - build-docker-dz_prometheus
  - build-docker-dz_telegraf
- name: integration
  jobs:
  - build-docker-int_compose
  - build-docker-int_inject
  - build-docker-int_cassandra
  - build-docker-int_cassandra_inject
  - build-docker-int_streaming
  - build-docker-int_monitor

jobs:
- name: build-docker-dz_templater
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-compose-serial_groups))
  plan:
  - get: github-repo-dz_templater
    trigger: ((concourse-compose-trigger))
  - put: docker-dz_templater
    params:
      build: github-repo-dz_templater/((docker-dz_templater-dockerfile-path))

- name: build-docker-dz_compose
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-compose-serial_groups))
  plan:
  - aggregate:
    - get: docker-dz_templater
      passed: [build-docker-dz_templater]
      trigger: ((concourse-compose-trigger))
    - get: github-repo-dz_compose
      trigger: ((concourse-compose-trigger))
  - task: add_properties
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-dz_templater-repository))
          tag: ((docker-dz_templater-tag))((docker-additional-tag))
      inputs:
      - name: github-repo-dz_compose
      outputs:
      - name: added_properties
      run:
        path: sh
        args:
        - -exc
        - |
          mkdir added_properties/dz_compose/
          cp -R github-repo-dz_compose/dz_compose/* added_properties/dz_compose/
          cd /templater/
          ./set_properties_to_templates.sh /tmp/build/*/added_properties
          ls /tmp/build/*/added_properties/dz_compose/
  - put: docker-dz_compose
    params:
      build: added_properties/((docker-dz_compose-dockerfile-path))

- name: build-docker-dz_cassandra
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-dz-serial_groups))
  plan:
  - aggregate:
    - get: docker-dz_templater
      passed: [build-docker-dz_templater]
      trigger: ((concourse-trigger))
    - get: github-repo-dz_cassandra
      trigger: ((concourse-trigger))
  - task: complete_dockerfiles
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-dz_templater-repository))
          tag: ((docker-dz_templater-tag))((docker-additional-tag))
      inputs:
      - name: github-repo-dz_cassandra
      outputs:
      - name: complete_dockerfiles
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R github-repo-dz_cassandra/* complete_dockerfiles/
          cd /templater/
          ./set_properties_to_templates.sh /tmp/build/*/complete_dockerfiles
  - put: docker-dz_cassandra
    params:
      build: complete_dockerfiles/((docker-dz_cassandra-dockerfile-path))

- name: build-docker-dz_nats-client
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-dz-serial_groups))
  plan:
  - aggregate:
    - get: docker-dz_templater
      passed: [build-docker-dz_templater]
      trigger: ((concourse-trigger))
    - get: github-repo-dz_nats-client
      trigger: ((concourse-trigger))
  - task: complete_dockerfiles
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-dz_templater-repository))
          tag: ((docker-dz_templater-tag))((docker-additional-tag))
      inputs:
      - name: github-repo-dz_nats-client
      outputs:
      - name: complete_dockerfiles
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R github-repo-dz_nats-client/* complete_dockerfiles/
          cd /templater/
          ./set_properties_to_templates.sh /tmp/build/*/complete_dockerfiles
  - put: docker-dz_nats-client
    params:
      build: complete_dockerfiles/((docker-dz_nats-client-dockerfile-path))

- name: build-docker-dz_nats-server
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-dz-serial_groups))
  plan:
  - aggregate:
    - get: docker-dz_templater
      passed: [build-docker-dz_templater]
      trigger: ((concourse-trigger))
    - get: github-repo-dz_nats-server
      trigger: ((concourse-trigger))
  - task: complete_dockerfiles
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-dz_templater-repository))
          tag: ((docker-dz_templater-tag))((docker-additional-tag))
      inputs:
      - name: github-repo-dz_nats-server
      outputs:
      - name: complete_dockerfiles
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R github-repo-dz_nats-server/* complete_dockerfiles/
          cd /templater/
          ./set_properties_to_templates.sh /tmp/build/*/complete_dockerfiles
  - put: docker-dz_nats-server
    params:
      build: complete_dockerfiles/((docker-dz_nats-server-dockerfile-path))

- name: build-docker-dz_prometheus
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-dz-serial_groups))
  plan:
  - aggregate:
    - get: docker-dz_templater
      passed: [build-docker-dz_templater]
      trigger: ((concourse-trigger))
    - get: github-repo-dz_prometheus
      trigger: ((concourse-trigger))
  - task: complete_dockerfiles
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-dz_templater-repository))
          tag: ((docker-dz_templater-tag))((docker-additional-tag))
      inputs:
      - name: github-repo-dz_prometheus
      outputs:
      - name: complete_dockerfiles
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R github-repo-dz_prometheus/* complete_dockerfiles/
          cd /templater/
          ./set_properties_to_templates.sh /tmp/build/*/complete_dockerfiles
  - put: docker-dz_prometheus
    params:
      build: complete_dockerfiles/((docker-dz_prometheus-dockerfile-path))

- name: build-docker-dz_telegraf
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-dz-serial_groups))
  plan:
  - aggregate:
    - get: docker-dz_templater
      passed: [build-docker-dz_templater]
      trigger: ((concourse-trigger))
    - get: github-repo-dz_telegraf
      trigger: ((concourse-trigger))
  - task: complete_dockerfiles
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-dz_templater-repository))
          tag: ((docker-dz_templater-tag))((docker-additional-tag))
      inputs:
      - name: github-repo-dz_telegraf
      outputs:
      - name: complete_dockerfiles
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R github-repo-dz_telegraf/* complete_dockerfiles/
          cd /templater/
          ./set_properties_to_templates.sh /tmp/build/*/complete_dockerfiles
  - put: docker-dz_telegraf
    params:
      build: complete_dockerfiles/((docker-dz_telegraf-dockerfile-path))

- name: build-docker-int_compose
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-compose-serial_groups))
  plan:
  - aggregate:
    - get: docker-dz_compose
      passed: [build-docker-dz_compose]
      trigger: ((concourse-compose-trigger))
    - get: github-repo-int_compose
      trigger: ((concourse-compose-trigger))
  - task: complete_dockerfiles
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-dz_templater-repository))
          tag: ((docker-dz_templater-tag))((docker-additional-tag))
      inputs:
      - name: github-repo-int_compose
      outputs:
      - name: complete_dockerfiles
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R github-repo-int_compose/* complete_dockerfiles/
          cd /templater/
          ./set_properties_to_templates.sh /tmp/build/*/complete_dockerfiles
  - put: docker-int_compose
    params:
      build: complete_dockerfiles/((docker-int_compose-dockerfile-path))

- name: build-docker-int_inject
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-int-serial_groups))
  plan:
  - aggregate:
    - get: docker-int_compose
      passed: [build-docker-int_compose]
      trigger: ((concourse-trigger))
    - get: github-repo-int_inject
      trigger: ((concourse-trigger))
  - task: complete_dockerfiles
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-int_compose-repository))
          tag: ((docker-int_compose-tag))((docker-additional-tag))
      inputs:
      - name: github-repo-int_inject
      outputs:
      - name: complete_dockerfiles
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R github-repo-int_inject/* complete_dockerfiles/
          cd /templater/
          ./set_properties_to_templates.sh /tmp/build/*/complete_dockerfiles
  - put: docker-int_inject
    params:
      build: complete_dockerfiles/((docker-int_inject-dockerfile-path))

- name: build-docker-int_cassandra
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-int-serial_groups))
  plan:
  - aggregate:
    - get: docker-int_compose
      passed: [build-docker-int_compose]
      trigger: ((concourse-trigger))
    - get: docker-dz_cassandra
      passed: [build-docker-dz_cassandra]
      trigger: ((concourse-trigger))
    - get: github-repo-int_cassandra
      trigger: ((concourse-trigger))
  - task: complete_dockerfiles
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-int_compose-repository))
          tag: ((docker-int_compose-tag))((docker-additional-tag))
      inputs:
      - name: github-repo-int_cassandra
      outputs:
      - name: complete_dockerfiles
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R github-repo-int_cassandra/* complete_dockerfiles/
          cd /templater/
          ./set_properties_to_templates.sh /tmp/build/*/complete_dockerfiles
  - put: docker-int_cassandra
    params:
      build: complete_dockerfiles/((docker-int_cassandra-dockerfile-path))

- name: build-docker-int_cassandra_inject
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-int-serial_groups))
  plan:
  - get: github-repo-int_cassandra_inject
    trigger: ((concourse-trigger))
  - put: docker-int_cassandra_inject
    params:
      build: github-repo-int_cassandra_inject/((docker-int_cassandra_inject-dockerfile-path))

- name: build-docker-int_streaming
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-int-serial_groups))
  plan:
  - aggregate:
    - get: docker-int_compose
      passed: [build-docker-int_compose]
      trigger: ((concourse-trigger))
    - get: github-repo-int_streaming
      trigger: ((concourse-trigger))
  - task: complete_dockerfiles
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-int_compose-repository))
          tag: ((docker-int_compose-tag))((docker-additional-tag))
      inputs:
      - name: github-repo-int_streaming
      outputs:
      - name: complete_dockerfiles
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R github-repo-int_streaming/* complete_dockerfiles/
          cd /templater/
          ./set_properties_to_templates.sh /tmp/build/*/complete_dockerfiles
  - put: docker-int_streaming
    params:
      build: complete_dockerfiles/((docker-int_streaming-dockerfile-path))

- name: build-docker-int_monitor
  public: ((concourse-public))
  serial: ((concourse-serial))
  serial_groups: ((concourse-int-serial_groups))
  plan:
  - aggregate:
    - get: docker-int_compose
      passed: [build-docker-int_compose]
      trigger: ((concourse-trigger))
    - get: github-repo-int_monitor
      trigger: ((concourse-trigger))
  - task: complete_dockerfiles
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-int_compose-repository))
          tag: ((docker-int_compose-tag))((docker-additional-tag))
      inputs:
      - name: github-repo-int_monitor
      outputs:
      - name: complete_dockerfiles
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R github-repo-int_monitor/* complete_dockerfiles/
          cd /templater/
          ./set_properties_to_templates.sh /tmp/build/*/complete_dockerfiles
  - put: docker-int_monitor
    params:
      build: complete_dockerfiles/((docker-int_monitor-dockerfile-path))

###### RESOURCES ######

resources:
- name: github-repo-dz_templater
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - dz_templater/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-dz_compose
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-dz_compose-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-dz_cassandra
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-dz_cassandra-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-dz_nats-client
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-dz_nats-client-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-dz_nats-server
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-dz_nats-server-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-dz_prometheus
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-dz_prometheus-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-dz_telegraf
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-dz_telegraf-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-int_compose
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-int_compose-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-int_inject
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-int_inject-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-int_cassandra
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-int_cassandra-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-int_cassandra_inject
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-int_cassandra_inject-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-int_streaming
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-int_streaming-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

- name: github-repo-int_monitor
  type: git
  source:
    uri: ((github-uri))
    branch: ((github-branch))
    paths:
      - ((github-int_monitor-path))/**
    git_user: ((github-username))
    private_key: ((github-private-key))

## Deetazilla Docker Images ##

- name: docker-dz_templater
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-dz_templater-repository))
    tag: ((docker-dz_templater-tag))((docker-additional-tag))

- name: docker-dz_compose
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-dz_compose-repository))
    tag: ((docker-dz_compose-tag))((docker-additional-tag))

- name: docker-dz_cassandra
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-dz_cassandra-repository))
    tag: ((docker-dz_cassandra-tag))((docker-additional-tag))

- name: docker-dz_nats-client
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-dz_nats-client-repository))
    tag: ((docker-dz_nats-client-tag))((docker-additional-tag))

- name: docker-dz_nats-server
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-dz_nats-server-repository))
    tag: ((docker-dz_nats-server-tag))((docker-additional-tag))

- name: docker-dz_prometheus
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-dz_prometheus-repository))
    tag: ((docker-dz_prometheus-tag))((docker-additional-tag))

- name: docker-dz_telegraf
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-dz_telegraf-repository))
    tag: ((docker-dz_telegraf-tag))((docker-additional-tag))

## Integration Docker Images ##

- name: docker-int_compose
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-int_compose-repository))
    tag: ((docker-int_compose-tag))((docker-additional-tag))

- name: docker-int_inject
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-int_inject-repository))
    tag: ((docker-int_inject-tag))((docker-additional-tag))

- name: docker-int_cassandra
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-int_cassandra-repository))
    tag: ((docker-int_cassandra-tag))((docker-additional-tag))

- name: docker-int_cassandra_inject
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-int_cassandra_inject-repository))
    tag: ((docker-int_cassandra_inject-tag))((docker-additional-tag))

- name: docker-int_streaming
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-int_streaming-repository))
    tag: ((docker-int_streaming-tag))((docker-additional-tag))

- name: docker-int_monitor
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-int_monitor-repository))
    tag: ((docker-int_monitor-tag))((docker-additional-tag))

