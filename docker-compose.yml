# -e to set properties
# location: local
# cluster_mode: single
# properties_path: _NONE_
# source properties/configuration.properties
# source properties/configuration-application.properties
# source properties/configuration-location-local-debug.properties
# source properties/configuration-mode-single.properties
# source properties/configuration-mode-single-debug.properties
# source properties/configuration-telegraf.properties
# source properties/configuration-telegraf-debug.properties
# SECRET_MODE: _no-secrets
# TARGETS: cassandra_inject

## cassandra ## cassandra_inject ## cassandra_inject_no-secrets ## root ## root_no-secrets
networks:
    default:
        external:
            name: testing
services:
    cassandra_cluster_main:
        deploy:
            placement:
                constraints:
                - node.role == manager
        environment:
        - CASSANDRA_SETUP_FILE=/cql/create-timeseries.cql
        - CASSANDRA_COUNT_PORT=6161
        - EUREKA_DEBUG=true
        image: logimethods/dz_cassandra:1.0-dev
        ports:
        - 6161:6161
    cassandra_cluster_node:
        deploy:
            mode: global
            placement:
                constraints:
                - node.role != manager
        environment:
        - READY_WHEN=""
        - DEPENDS_ON=eureka,cassandra_cluster_main
        - SETUP_LOCAL_CONTAINERS=true
        - PROVIDED_CASSANDRA_SEEDS=$${cassandra_cluster_main_local}
        - PING_ALLOWED=false
        - EUREKA_DEBUG=true
        image: logimethods/dz_cassandra:1.0-dev
    cassandra_inject:
        deploy:
            mode: global
            placement:
                constraints:
                - node.role == manager
            restart_policy:
                condition: on-failure
                delay: 10s
        environment:
        - DEPENDS_ON=nats,cassandra_cluster_main
        - NATS_NAME=nats
        - NATS_NAME_FILE=nats
        - NATS_SUBJECT=smartmeter.voltage.raw.data.>
        - LOG_LEVEL=INFO
        - TASK_SLOT={{.Task.Slot}}
        - CASSANDRA_INJECT_CONSISTENCY=ONE
        - CASSANDRA_URL=cassandra_cluster_main
        - CASSANDRA_TIMEOUT=
        - PING_ALLOWED=false
        - NATS_USERNAME=testing
        - NATS_PASSWORD=xyz123
        - EUREKA_DEBUG=true
        image: logimethods/int_cassandra-inject:1.0-dev
    eureka:
        deploy:
            placement:
                constraints:
                - node.role == manager
        environment:
        - FLASK_DEBUG=0
        image: logimethods/eureka:latest
        ports:
        - 5000:5000
        volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    nats:
        command: /gnatsd -c gnatsd.conf -m 8222  -cluster nats://0.0.0.0:6222
        deploy:
            placement:
                constraints:
                - node.role == manager
        environment:
        - READY_WHEN=\"Server is ready\"
        - NATS_NAME=nats
        - NATS_USERNAME=testing
        - NATS_PASSWORD=xyz1234
        - NATS_CLUSTER_USERNAME=/
        - NATS_CLUSTER_PASSWORD=
        image: logimethods/dz_nats-server:latest
        ports:
        - 4222:4222
        - 8222:8222
        volumes:
        - /proc:/writable-proc
    nats_client:
        command: /main
        environment:
        - WAIT_FOR=nats
        - NATS_NAME=nats
        - EUREKA_DEBUG=true
        - NATS_SUBJECT=none
        - NATS_USERNAME=testing
        - NATS_PASSWORD=xyz1234
        image: logimethods/dz_nats-client:latest
    nats_cluster:
        command: /gnatsd -c gnatsd.conf -m 8222  -cluster nats://0.0.0.0:6222
            -routes nats://nats:6222
        deploy:
            mode: global
            placement:
                constraints:
                - node.role != manager
        environment:
        - READY_WHEN=\"Server is ready\"
        - NATS_NAME=nats
        - NATS_USERNAME=testing
        - NATS_PASSWORD=xyz1234
        - NATS_CLUSTER_USERNAME=/
        - NATS_CLUSTER_PASSWORD=
        image: logimethods/dz_nats-server:latest
        volumes:
        - /proc:/writable-proc
    visualizer:
        deploy:
            placement:
                constraints:
                - node.role == manager
        image: dockersamples/visualizer
        ports:
        - 8080:8080/tcp
        volumes:
        - /var/run/docker.sock:/var/run/docker.sock
version: '3.1'


