version: "3.1"

### create_network,
#### docker ${remote} network create --driver overlay --attachable smartmeter
networks:
  default:
    external:
      name: smartmeter

services:
  ### ["create_service", "visualizer", 1],
  visualizer:
    image: dockersamples/visualizer
    deploy:
      placement:
        constraints:
          - node.role == manager
    ports:
      - "8080:8080/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  ### ["create_service", "eureka", 1],
  eureka:
    image: logimethods/eureka:${eureka_version}
    deploy:
      placement:
        constraints:
          - node.role == manager
    ports:
      - "${FLASK_PORT}:5000"
    environment:
      - FLASK_DEBUG=${FLASK_DEBUG}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  ### create_service_nats,
  nats:
    image: logimethods/ek_nats-server:${ek_nats_server_version}
    deploy:
      placement:
        constraints:
          - node.role == manager
#      update_config:
#        parallelism: 1
#        delay: 10s
    environment:
      - READY_WHEN=\"Server is ready\"
      - NATS_NAME=${NATS_NAME}
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - "/proc:/writable-proc"
    command: /gnatsd -c gnatsd.conf -m 8222 ${NATS_DEBUG} -cluster nats://0.0.0.0:6222

  nats_cluster:
    image: logimethods/ek_nats-server:${ek_nats_server_version}
    deploy:
      mode: global
      placement:
        constraints:
          - node.role != manager
#      update_config:
#        parallelism: 1
#        delay: 10s
    environment:
      - READY_WHEN=\"Server is ready\"
      - NATS_NAME=${NATS_NAME}
    volumes:
      - "/proc:/writable-proc"
    command: /gnatsd -c gnatsd.conf -m 8222 ${NATS_DEBUG} -cluster nats://0.0.0.0:6222 -routes nats://nats:6222

  ## For TESTING/DEBUG ONLY! ##
  nats_client:
    image: logimethods/ek_nats-client:${ek_nats_client_version}
    environment:
      - WAIT_FOR=${NATS_NAME}
      - NATS_NAME=${NATS_NAME}
      - EUREKA_DEBUG=true
      - NATS_SUBJECT=${NATS_CLIENT_SUBJECT}
    command: /main
